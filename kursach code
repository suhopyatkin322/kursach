
#include <iostream>

#include "C:/canvas.hpp"
using namespace std;
void krestik(int x,int y, Window& w)
{

    w.draw(Line(x, y, x-75, y-40 ), Pen(255, 0, 0));
    w.draw(Line(x, y, x+35, y-40 ), Pen(255, 0, 0));
    w.draw(Line(x, y, x-35, y-60 ), Pen(255, 0, 0));
    w.draw(Line(x, y, x+75, y-60 ), Pen(255, 0, 0));

    w.draw(Line(x, y, x-75, y+60 ), Pen(255, 0, 0));
    w.draw(Line(x, y, x-35, y+40 ), Pen(255, 0, 0));
    w.draw(Line(x, y, x+75, y+40 ), Pen(255, 0, 0));
    w.draw(Line(x, y, x+35, y+60 ), Pen(255, 0, 0));

}
void nolik(int x, int y,Window& w)
{

    w.draw(CnvEllipse(x-55, y-50, x+55, y+50),Pen(0, 0, 255));
    w.draw(CnvEllipse(x-25, y-50, x+25, y+50),Pen(0, 0, 255));

}
void pole(Window& w)
{
    
    int x=100;
    int y=100;
    w.draw(Line(22*(x/10), 4*(y/10), 55*(x/10), 4*(y/10)), Pen(0, 0, 0));
    w.draw(Line(55*(x/10), 4*(y/10), 43*(x/10), y), Pen(0, 0, 0));
    w.draw(Line(x, y, 43*(x/10), y), Pen(0, 0, 0));
    w.draw(Line(x, y, 22*(x/10), 4*(y/10)), Pen(0, 0, 0));

    w.draw(Line((x/10)*18, y/10*6, 51*(x/10), y/10*6), Pen(0, 0, 0));
    w.draw(Line((x/10)*14, y/10*8, 47*(x/10), y/10*8), Pen(0, 0, 0));
    w.draw(Line((x/10)*33, 4*(y/10), 21*(x/10), y), Pen(0, 0, 0));
    w.draw(Line((x/10)*44, 4*(y/10), 32*(x/10), y), Pen(0, 0, 0));

    w.draw(Line(x, y+100, (22*x)/10, (4*y)/10+100), Pen(0, 0, 0));
    w.draw(Line(x, y+100, (43*x)/10, y+100), Pen(0, 0, 0));
    w.draw(Line((22*x)/10, (4*y)/10+100, (55*x)/10, (4*y)/10+100), Pen(0, 0,0));
    w.draw(Line((55*x)/10, (4*y)/10+100, (43*x)/10, y+100), Pen(0, 0, 0));

    w.draw(Line((x/10)*18, y/10*6+100, 51*(x/10), y/10*6+100), Pen(0, 0, 0));
    w.draw(Line((x/10)*14, y/10*8+100, 47*(x/10), y/10*8+100), Pen(0, 0, 0));
    w.draw(Line((x/10)*33, 4*(y/10)+100, 21*(x/10), y+100), Pen(0, 0, 0));
    w.draw(Line((x/10)*44, 4*(y/10)+100, 32*(x/10), y+100), Pen(0, 0, 0));

    w.draw(Line(x, y+200, 22*x/10, 4*y/10+200), Pen(0, 0, 0));
    w.draw(Line(x, y+200, 43*x/10, y+200), Pen(0, 0, 0));
    w.draw(Line(22*x/10, 4*y/10+200, 55*x/10, 4*y/10+200), Pen(0, 0, 0));
    w.draw(Line(55*x/10, 4*y/10+200, 43*x/10, y+200), Pen(0, 0, 0));

    w.draw(Line((x/10)*18, y/10*6+200, 51*(x/10), y/10*6+200), Pen(0, 0, 0));
    w.draw(Line((x/10)*14, y/10*8+200, 47*(x/10), y/10*8+200), Pen(0, 0, 0));
    w.draw(Line((x/10)*33, 4*(y/10)+200, 21*(x/10), y+200), Pen(0, 0, 0));
    w.draw(Line((x/10)*44, 4*(y/10)+200, 32*(x/10), y+200), Pen(0, 0, 0));

    w.draw(Line(x, y+300, 22*x/10, 4*y/10+300), Pen(0, 0, 0));
    w.draw(Line(x, y+300, 43*x/10, y+300), Pen(0, 0, 0));
    w.draw(Line(22*x/10, 4*y/10+300, 55*x/10, 4*y/10+300), Pen(0, 0, 0));
    w.draw(Line(55*x/10, 4*y/10+300, 43*x/10, y+300), Pen(0, 0, 0));

    w.draw(Line((x/10)*18, y/10*6+300, 51*(x/10), y/10*6+300), Pen(0, 0, 0));
    w.draw(Line((x/10)*14, y/10*8+300, 47*(x/10), y/10*8+300), Pen(0, 0, 0));
    w.draw(Line((x/10)*33, 4*(y/10)+300, 21*(x/10), y+300), Pen(0, 0, 0));
    w.draw(Line((x/10)*44, 4*(y/10)+300, 32*(x/10), y+300), Pen(0, 0, 0));

    w.draw(Line(22*(x/10), 4*(y/10), 22*(x/10), 4*(y/10)+300), Pen(0, 0, 0));
    w.draw(Line(55*(x/10), 4*(y/10), 55*(x/10), 4*(y/10)+300), Pen(0, 0, 0));
    w.draw(Line(x, y, x, y+300), Pen(0, 0, 0));
    w.draw(Line(43*(x/10), y, 43*(x/10), y+300), Pen(0, 0, 0));

}

int main()

{

    Window w(default_proc);
    w.geometry(1280, 1024);
    w.start();
    w.enable_frame_buffer();

    /*
    Window w(nostart);
    w.geometry(1280, 1024);
    w.start(default_proc);
    w.enable_frame_buffer();
    */
    int x=100;
    int y=100;
    int mouse_x=0, mouse_y=0;
    const int i = 3;
    const int j = 3;
    const int k = 3;
    int s[i][j][k];

    for(int a = 0; a < i; a++)
    {
        for(int b = 0; b < j; b++)
        {
            for(int c = 0; c < k; c++)
            {
                s[a][b][c] = 0;
            }
        }
    }

    pole(w);
    int a=0;
    int d=rand()%2+1;
    while(1)
    {
        Message m;
        if( m.peek() )
        {
            if( m.is_mousemove() )
            {
                mouse_x = m.mouse_x();
                mouse_y = m.mouse_y();
            }

            if(m.is_keydown())
            {
                if(m.vkey() == VK_SPACE && mouse_y<160 && mouse_y>140 && a==0)
                {
                    if (mouse_x>180 && mouse_x<290 && s[2][0][2]==0 )
                    {
                        krestik(255,100,w);
                        s[2][0][2]=1;
                        a=a+1;
                    }
                    if
                    (mouse_x>290 && mouse_x<400 && s[2][1][2]==0)
                    {
                        krestik(365, 100,w);
                        s[2][1][2]=1;
                        a=a+1;
                    }
                    if (mouse_x>400 && mouse_x<510 && s[2][2][2]==0)
                    {
                        krestik(475, 100,w);
                        s[2][2][2]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<180 && mouse_y>160 && a==0)
                {
                    if (mouse_x>140 && mouse_x<250 && s[1][0][2]==0)
                    {
                        krestik(215, 120,w);
                        s[1][0][2]=1;
                        a=a+1;
                    }
                    if (mouse_x>250 && mouse_x<360&& s[1][1][2]==0)
                    {
                        krestik(325, 120,w);
                        s[1][1][2]=1;
                        a=a+1;
                    }
                    if (mouse_x>360 && mouse_x<470&& s[1][2][2]==0)
                    {
                        krestik(435, 120,w);
                        s[1][2][2]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<200 && mouse_y>180 && a==0)
                {
                    if (mouse_x>100 && mouse_x<210&& s[0][0][2]==0)
                    {
                        krestik(175, 140,w);
                        s[0][0][2]=1;
                        a=a+1;
                    }
                    if (mouse_x>210 && mouse_x<320&& s[0][1][2]==0)
                    {
                        krestik(285, 140,w);
                        s[0][1][2]=1;
                        a=a+1;
                    }
                    if (mouse_x>320 && mouse_x<430 && s[0][2][2]==0)
                    {
                        krestik(395, 140,w);
                        s[0][2][2]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<160 && mouse_y>140 && a==1)
                {
                    if (mouse_x>180 && mouse_x<290 && s[2][0][2]==0)
                    {
                        nolik(255, 100,w);
                        s[2][0][2]=2;
                        a=a-1;
                    }
                    if (mouse_x>290 && mouse_x<400 && s[2][1][2]==0 && a==1)
                    {
                        nolik(365, 100,w);
                        s[2][1][2]=2;
                        a=a-1;
                    }
                    if (mouse_x>400 && mouse_x<510 && s[2][2][2]==0 && a==1)
                    {
                        nolik(475, 100,w);
                        s[2][2][2]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<180 && mouse_y>160 && a==1)
                {
                    if (mouse_x>140 && mouse_x<250 && s[1][0][2]==0)
                    {
                        nolik(215, 120,w) ;
                        s[1][0][2]=2;
                        a=a-1;
                    }
                    if (mouse_x>250 && mouse_x<360 &&s[1][1][2]==0 )
                    {
                        nolik(325, 120,w);
                        s[1][1][2]=2;
                        a=a-1;
                    }
                    if (mouse_x>360 && mouse_x<470 && s[1][2][2]==0)
                    {
                        nolik(435, 120,w);
                        s[1][2][2]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<200 && mouse_y>180 && a==1)
                {
                    if (mouse_x>100 && mouse_x<210 && s[0][0][2]==0)
                    {
                        nolik(175, 140,w);
                        s[0][0][2]=2;
                        a=a-1;
                    }
                    if (mouse_x>210 && mouse_x<320 && s[0][1][2]==0)
                    {
                        nolik(285, 140,w);
                        s[0][1][2]=2;
                        a=a-1;
                    }
                    if (mouse_x>320 && mouse_x<430 && s[0][2][2]==0)
                    {
                        nolik(395, 140,w);
                        s[0][2][2]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<260 && mouse_y>240 && a==0)
                {
                    if (mouse_x>180 && mouse_x<290 && s[2][0][1]==0 )
                    {
                        krestik(255, 200,w);
                        s[2][0][1]=1;
                        a=a+1;
                    }
                    if (mouse_x>290 && mouse_x<400 && s[2][1][1]==0)
                    {
                        krestik(365, 200,w);
                        s[2][1][1]=1;
                        a=a+1;
                    }
                    if (mouse_x>400 && mouse_x<510 && s[2][2][1]==0)
                    {
                        krestik(475, 200,w);
                        s[2][2][1]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<280 && mouse_y>260 && a==0)
                {
                    if (mouse_x>140 && mouse_x<250 && s[1][0][1]==0)
                    {
                        krestik(215, 220,w);
                        s[1][0][1]=1;
                        a=a+1;
                    }
                    if (mouse_x>250 && mouse_x<360 && s[1][1][1]==0)
                    {
                        krestik(325, 220,w);
                        s[1][1][1]=1;
                        a=a+1;
                    }
                    if (mouse_x>360 && mouse_x<470 && s[1][2][1]==0)
                    {
                        krestik(435, 220,w);
                        s[1][2][1]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<300 && mouse_y>280 && a==0)
                {
                    if (mouse_x>100 && mouse_x<210 && s[0][0][1]==0)
                    {
                        krestik(175, 240,w);
                        s[0][0][1]=1;
                        a=a+1;
                    }
                    if (mouse_x>210 && mouse_x<320 && s[0][1][1]==0)
                    {
                        krestik(285, 240,w);
                        s[0][1][1]=1;
                        a=a+1;
                    }
                    if (mouse_x>320 && mouse_x<430 && s[0][2][1]==0)
                    {
                        krestik(395, 240,w);
                        s[0][2][1]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<260 && mouse_y>240 && a==1)
                {
                    if (mouse_x>180 && mouse_x<290 && s[2][0][1]==0)
                    {
                        nolik(255, 200,w);
                        s[2][0][1]=2;
                        a=a-1;
                    }
                    if (mouse_x>290 && mouse_x<400 && s[2][1][1]==0)
                    {
                        nolik(365, 200,w);
                        s[2][1][1]=2;
                        a=a-1;
                    }
                    if (mouse_x>400 && mouse_x<510&& s[2][2][1]==0)
                    {
                        nolik(475, 200,w);
                        s[2][2][1]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<280 && mouse_y>260 && a==1)
                {
                    if (mouse_x>140 && mouse_x<250 && s[1][0][1]==0)
                    {
                        nolik(215, 220,w);
                        s[1][0][1]=2;
                        a=a-1;
                    }
                    if (mouse_x>250 && mouse_x<360 && s[1][1][1]==0)
                    {
                        nolik(325, 220,w);
                        s[1][1][1]=2;
                        a=a-1;
                    }
                    if (mouse_x>360 && mouse_x<470 && s[1][2][1]==0)
                    {
                        nolik(435, 220,w);
                        s[1][2][1]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<300 && mouse_y>280 && a==1)
                {
                    if (mouse_x>100 && mouse_x<210 && s[0][0][1]==0)
                    {
                        nolik(175, 240,w);
                        s[0][0][1]=2;
                        a=a-1;
                    }
                    if (mouse_x>210 && mouse_x<320 && s[0][1][1]==0)
                    {
                        nolik(285, 240,w);
                        s[0][1][1]=2;
                        a=a-1;
                    }
                    if (mouse_x>320 && mouse_x<430 && s[0][2][1]==0)
                    {
                        nolik(395, 240,w);
                        s[0][2][1]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<360 && mouse_y>340 && a==0)
                {
                    if (mouse_x>180 && mouse_x<290 && s[2][0][0]==0)
                    {
                        krestik(255, 300,w);
                        s[2][0][0]=1;
                        a=a+1;
                    }
                    if (mouse_x>290 && mouse_x<400 && s[2][1][0]==0)
                    {
                        krestik(365, 300,w);
                        s[2][1][0]=1;
                        a=a+1;
                    }
                    if (mouse_x>400 && mouse_x<510 && s[2][2][0]==0)
                    {
                        krestik(475, 300,w);
                        s[2][2][0]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<380 && mouse_y>360 && a==0)
                {
                    if (mouse_x>140 && mouse_x<250 && s[1][0][0]==0)
                    {
                        krestik(215, 320,w);
                        s[1][0][0]=1;
                        a=a+1;
                    }
                    if (mouse_x>250 && mouse_x<360 && s[1][1][0]==0)
                    {
                        krestik(325, 320,w);
                        s[1][1][0]=1;
                        a=a+1;
                    }
                    if (mouse_x>360 && mouse_x<470 && s[1][2][0]==0)
                    {
                        krestik(435, 320,w);
                        s[1][2][0]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<400 && mouse_y>380 && a==0)
                {
                    if (mouse_x>100 && mouse_x<210 && s[0][0][0]==0)
                    {
                        krestik(175, 340,w);
                        s[0][0][0]=1;
                        a=a+1;
                    }
                    if (mouse_x>210 && mouse_x<320 && s[0][1][0]==0)
                    {
                        krestik(285, 340,w);
                        s[0][1][0]=1;
                        a=a+1;
                    }
                    if (mouse_x>320 && mouse_x<430 && s[0][2][0]==0 )
                    {
                        krestik(395, 340,w);
                        s[0][2][0]=1;
                        a=a+1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<360 && mouse_y>340 && a==1)
                {
                    if (mouse_x>180 && mouse_x<290 && s[2][0][0]==0)
                    {
                        nolik(255, 300,w);
                        s[2][0][0]=2;
                        a=a-1;
                    }
                    if (mouse_x>290 && mouse_x<400 && s[2][1][0]==0)
                    {
                        nolik(365, 300,w);
                        s[2][1][0]=2;
                        a=a-1;
                    }
                    if (mouse_x>400 && mouse_x<510 && s[2][2][0]==0)
                    {
                        nolik(475, 300,w);
                        s[2][2][0]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<380 && mouse_y>360 && a==1)
                {
                    if (mouse_x>140 && mouse_x<250 && s[1][0][0]==0)
                    {
                        nolik(215, 320,w);
                        s[1][0][0]=2;
                        a=a-1;
                    }
                    if (mouse_x>250 && mouse_x<360 && s[1][1][0]==0)
                    {
                        nolik(325, 320,w);
                        s[1][1][0]=2;
                        a=a-1;
                    }
                    if (mouse_x>360 && mouse_x<470 && s[1][2][0]==0)
                    {
                        nolik(435, 320,w);
                        s[1][2][0]=2;
                        a=a-1;
                    }
                }
                if(m.vkey() == VK_SPACE && mouse_y<400 && mouse_y>380 && a==1)
                {
                    if (mouse_x>100 && mouse_x<210 && s[0][0][0]==0)
                    {
                        nolik(175, 340,w);
                        s[0][0][0]=2;
                        a=a-1;
                    }
                    if (mouse_x>210 && mouse_x<320 && s[0][1][0]==0)
                    {
                        nolik(285, 340,w);
                        s[0][1][0]=2;
                        a=a-1;
                    }
                    if (mouse_x>320 && mouse_x<430 && s[0][2][0]==0)
                    {
                        nolik(395, 340,w);
                        s[0][2][0]=2;
                        a=a-1;
                    }
                }
                w.paint();
                for(int z = 0; z < 3; z++)
                {
                    for(int x = 0; x< 3; x++)
                    {
                        if(s[x][0][z] == s[x][1][z] && s[x][1][z] == s[x][2][z])
                        {
                            if(s[x][0][z]==2)
                            {
                                cout<< "noliki winz ";


                            }
                            if(s[x][0][z]==1)cout<<"krestiki winz  ";
                        }
                    }
                    for(int y = 0; y< 3; y++)
                    {
                        if(s[0][y][z] == s[1][y][z] && s[1][y][z] == s[2][y][z])
                        {
                            if(s[0][y][z]==2)cout<<"noliki wins ";
                            if(s[0][y][z]==1)cout<< "krestiki wins ";
                        }

                    }

                    if(s[0][0][z] == s[1][1][z] && s[1][1][z] == s[2][2][z])
                    {
                        if(s[0][0][z]==2)
                            cout<< "noliki wins";
                        if(s[0][0][z]==1)cout<<"krestiki wins";
                    }
                    if(s[2][0][z] == s[1][1][z] && s[1][1][z] == s[0][2][z])
                    {
                        if(s[2][0][z]==2)cout<< "noliki wins";
                        if(s[2][0][z]==1)cout<<"krestiki wins";
                    }
                }

                if(s[2][0][2]==1 && s[2][0][1]==1 && s[2][0][0]==1)
                    cout<<"krestiki win";
                if(s[2][0][2]==2 && s[2][0][1]==2 && s[2][0][0]==2)
                    cout<<"noliki win";
                if(s[2][1][2]==1 && s[2][1][1]==1 && s[2][1][0]==1)
                    cout<<"krestiki win";
                if(s[2][1][2]==2 && s[2][1][1]==2 && s[2][1][0]==2)
                    cout<<"noliki win";
                if(s[2][2][2]==1 && s[2][0][1]==1 && s[2][2][0]==1)
                    cout<<"krestiki win";
                if(s[2][2][2]==2 && s[2][0][1]==2 && s[2][2][0]==2)
                    cout<<"noliki win";
                if(s[1][0][2]==1 && s[2][0][1]==1 && s[2][0][0]==1)
                    cout<<"krestiki win";
                if(s[1][0][2]==2 && s[2][0][1]==2 && s[2][0][0]==2)
                    cout<<"noliki win";
                if(s[1][1][2]==1 && s[2][0][1]==1 && s[2][0][0]==1)
                    cout<<"krestiki win";
                if(s[1][1][2]==2 && s[2][0][1]==2 && s[2][0][0]==2)
                    cout<<"noliki win";
                if(s[1][2][1]==1 && s[2][0][1]==1 && s[2][0][0]==1)
                    cout<<"krestiki win";
                if(s[1][2][1]==2 && s[2][0][1]==2 && s[2][0][0]==2)
                    cout<<"noliki win";
                if(s[0][0][2]==1 && s[2][0][1]==1 && s[2][0][0]==1)
                    cout<<"krestiki win";
                if(s[0][0][2]==2 && s[2][0][1]==2 && s[2][0][0]==2)
                    cout<<"noliki win";
                if(s[0][1][2]==1 && s[2][0][1]==1 && s[2][0][0]==1)
                    cout<<"krestiki win";
                if(s[0][1][2]==2 && s[2][0][1]==2 && s[2][0][0]==2)
                    cout<<"noliki win";
                if(s[0][2][2]==1 && s[0][2][1]==1 && s[0][2][0]==1)
                    cout<<"krestiki win";
                if(s[0][2][2]==2 && s[0][2][1]==2 && s[0][2][0]==2)
                    cout<<"noliki win";

            }
        }
    }
}
